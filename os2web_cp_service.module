<?php

/**
 * @file
 * Code for the OS2Web Case Publishing Service feature.
 */
include_once 'os2web_cp_service.features.inc';

/**
 * Implements hook_init().
 */
function os2web_cp_service_init() {
  // ab@bellcom.dk
  // Menu Minipanels us using qTip. Only add qTip js if module doesnt exits.
  if (!module_exists('menu_minipanels')) {
    drupal_add_js(drupal_get_path('module', 'os2web_cp_service') . '/js/jquery.qtip-1.0.0-rc3.min.js');
  }

  drupal_add_js(drupal_get_path('module', 'os2web_cp_service') . '/js/os2web_cp_service.js');
  drupal_add_css(drupal_get_path('module', 'os2web_cp_service') . '/css/os2web_cp_service.css');
}

/**
 * Implements hook_menu().
 */
function os2web_cp_service_menu() {
  $items = array();

  $items['os2web/service/cp/v1'] = array(
    'type' => MENU_CALLBACK,
    'page callback' => 'os2web_cp_service_handler',
    'access callback' => TRUE,
  );


  $items['os2web/service/gf/v1/%'] = array(
    'type' => MENU_CALLBACK,
    'page callback' => 'os2web_gf_service_handler',
    'page arguments' => array(4),
    'access callback' => TRUE,
  );



  return $items;
}

/**
 * Callback for Case Publishing service. Forwards handling to provided plugin.
 */
function os2web_cp_service_handler() {
  if (!os2web_esdh_provider_has_api('cp')) {
    drupal_access_denied();
  }
  $data = os2web_esdh_provider_invoke('cp', 'handle_request');
  return $data;
}

/**
 * Callback for the file provider service.
 */
function os2web_gf_service_handler($file_id) {

  if ($url = variable_get('os2web_cp_service_cp_document_fileurl')) {

    $username = variable_get('os2web_cp_service_endpoint_user');
    $password = variable_get('os2web_cp_service_endpoint_pass');
    if (!empty($username) && !empty($password)) {
      // CURL for transfer:
      $ch = curl_init($url.'?FileID='.$file_id.'&FileFormat=Published');
      curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
      curl_setopt($ch, CURLOPT_USERPWD, "{$username}:{$password}");
      curl_setopt($ch, CURLOPT_HTTPAUTH, CURLAUTH_BASIC);
      $data = curl_exec($ch);
      $header = curl_getinfo($ch);
      if ($header['http_code'] === 200) {
        drupal_add_http_header('Content-Type', $header['content_type']);
        drupal_add_http_header('Content-Length', $header['download_content_length']);
        echo $data;
      } else {
        error_log(basename(__FILE__) . ':' . __LINE__ . ' HTTP header recieved = ' . print_r($header, 1));
        drupal_not_found();
      }
    } else {
      error_log(basename(__FILE__) . ':' . __LINE__ . ' Settings are wrong.');
      drupal_not_found();
    }

  } else {
    error_log(basename(__FILE__) . ':' . __LINE__ . ' No URL found in variable DB');
    drupal_not_found();
  }
}

/**
 * Function to control/alter any configurations before added to the variable table.
 * Make cases of those confs you allow to be stored from the ws.
 *
 * @param string $key
 *   The key of the configuration.
 * @param string $value
 *   The value of the conf, which has to be altered/stored.
 *
 * @return void
 */
function os2web_cs_service_alter_configuration($key, $value) {
  switch ($key) {
    case 'FileServiceURL':
        return variable_set('os2web_cp_service_cp_document_fileurl', $value);
      break;
  }
}

/**
 * Service function for creating a case.
 *
 * @param array $data
 *   Structured array with data for the Case.
 *
 * @return boolean
 *   TRUE on successful content creation.
 */
function os2web_cs_service_create_case(array $data) {
  // Prepare data.
  $data = array_replace_recursive(os2web_cs_service_default_case(), $data);

  $query = new EntityFieldQuery();
  $result = $query
      ->entityCondition('entity_type', 'node')
      ->propertyCondition('type', 'os2web_cp_service_cp_case')
      ->propertyCondition('status', 1)
      ->fieldCondition('field_os2web_cp_service_sysid', 'value', $data['fields']['SystemID'], '=')
      ->execute();
  $nids = (isset($result['node']))?array_keys($result['node']):null;

  if (is_array($nids)) {
    node_delete_multiple($nids);
  }
  $node = (object) NULL;
  $node->type = 'os2web_cp_service_cp_case';
  $node->uid = 0;
  $node->status = 1;
  $node->comment = 0;
  $node->promote = 0;
  $node->moderate = 0;
  $node->sticky = 0;
  $node->language = LANGUAGE_NONE;
  node_object_prepare($node);

  $node->title = (string) !empty($data['fields']['Officiel Titel'])?$data['fields']['Officiel Titel']:$data['fields']['Sagstitel'];
  $node_fields = field_info_instances('node','os2web_cp_service_cp_case'); // Has all fields of a node type case
  foreach ($node_fields as $field_name => $field) {
    if(!empty($data['fields'][$field['label']])){

      $field_info = field_info_field($field_name);

      switch ($field_info['type']) {
        case 'text':
          $node->{$field_name}[LANGUAGE_NONE][0]['value'] = (string) $data['fields'][$field['label']];
          break;
        default:
          $node->{$field_name}[LANGUAGE_NONE][0]['value'] = $data['fields'][$field['label']];
          break;
      }
    }
  }

  node_submit($node);
  return node_save($node);
}

/**
 * Default array structure for a case.
 */
function os2web_cs_service_default_case() {
  return array(
    'type' => 'case',
    'rules' => array(),
    'status' => NULL,
    'fields' => array(
      'SagsID' => NULL,
      'SystemID' => NULL,
      'Sagsnummer' => NULL,
      // 'Sagsår' => NULL,
      'Sagsløbenummer' => NULL,
      // PERSAG, EJSAG, Akassesag, Børn- og ungesag.
      'Sagstype - Sagstype' => NULL,
      // Personsag, Ejendomssag, Akassesag, Børn- og ungesag.
      'Sagstype - Sagstypebetegnelse' => NULL,
      'Sagsundertype - Sagsundertype' => NULL,
      'Sagstitel' => NULL,
      'Officiel titel' => NULL,
      'Sagsindhold' => NULL,
      'CPR' => NULL,
      'Matrikel' => NULL,
      'Ejendomsnummer' => NULL,
      'Sagsstatus - Sagstype' => NULL,
      'Sagsstatus - Sagstypebetegnelse' => NULL,
      'Sagsstatus - Afsluttet' => NULL,
      'Sagsstatus - Passiv' => NULL,
      'Sagsbehandler - BrugerID' => NULL,
      'Sagsbehandler - Bruger logon' => NULL,
      'Sagsbehandler - Brugernavn' => NULL,
      'Sagsansvarlig enhed - ID' => NULL,
      'Sagsansvarlig enhed - Administrativ enhed forkortelse' => NULL,
      'Sagsansvarlig enhed - Administrativ enhed' => NULL,
      'Sagsansvarlig enhed - Administrativ enhed beskrivelse' => NULL,
      'Sagsdato' => NULL,
      'Oprettelsesdato' => NULL,
      'Redigeringsdato' => NULL,
      'Sidste dokument' => NULL,
      'Afslutningsdato' => NULL,
      'Kassationsdato' => NULL,
      'Kassationskode - Kassationskode' => NULL,
      'Kassationskode - Kassationskodebetegnelse' => NULL,
      'Slettekode' => NULL,
      'Adgangskode - Adgangskode' => NULL,
      'Adgangskode - Adgangskodebetegnelse' => NULL,
      'Adgangsgruppe - AdgangsgruppeID' => NULL,
      'Adgangsgruppe - Adgangsgruppe' => NULL,
      'Aktindsigt - AktindsigtsID' => NULL,
      'Aktindsigt - Aktindsigt' => NULL,
      'Arkivdel - Arkivdel' => NULL,
      'Arkivdel - Arkivdelbetegnelse' => NULL,
      'Journalenhed - Journalenhed' => NULL,
      'Journalenhed - Journalenhedsbetegnelse' => NULL,
      'Papirsag' => NULL,
      'KL emnenummer - KL emnenummer' => NULL,
      'KL emnenummer - KL emnenbeskrivelse' => NULL,
      'KL emnenummer - KL emnenummer og beskrivelse' => NULL,
      'KL handlingsfacet - KL handlingsfacet' => NULL,
      'KL handlingsfacet - KL handlingsfacetbeskrivelse' => NULL,
      'KL handlingsfacet - KL handlingsfacet og beskrivelse' => NULL,
      'OBS-dato' => NULL,
      'OBS-note' => NULL,
      'Sagsfrist' => NULL,
      'Sagsfrist note' => NULL,
      'Projekt - Projekt' => NULL,
      'Sagsgruppe - SagsgruppeID' => NULL,
      'Sagsgruppe - Sagsgruppe' => NULL,
      'Afgørelse - AfgørelsesID' => NULL,
      'Afgørelse - Afgørelse' => NULL,
      'Prioritet - ID' => NULL,
      'Prioritet - Prioritet' => NULL,
      'Sagsfase - SagsfaseID' => NULL,
      'Sagsfase - Sagsfase' => NULL,
      'Sagsfasefrist' => NULL,
      'Afventer - AfventerID' => NULL,
      'Afventer - Afventer' => NULL,
      'Klient køn - ID' => NULL,
      'Klient køn - Klient køn' => NULL,
      'Klient fødselsdato' => NULL,
      'Klient alder ved registrering' => NULL,
      'Klient faggruppe - ID' => NULL,
      'Klient faggruppe - Klient faggruppe' => NULL,
      'Klient henvendelse - ID' => NULL,
      'Klient henvendelse - Klient henvendelse' => NULL,
      'Klient faglig vurdering - ID' => NULL,
      'Klient faglig vurdering - Klient faglig vurdering' => NULL,
      'Klient foranstaltningsforslag - ID' => NULL,
      'Klient foranstaltningsforslag - Klient foranstaltningsforslag' => NULL,
      'Klient afgørelse - ID' => NULL,
      'Klient afgørelse - Klient afgørelse' => NULL,
      'Klient kategori - ID' => NULL,
      'Klient kategori - Klient kategori' => NULL,
      'Klient klassetrin - ID' => NULL,
      'Klient klassetrin - Klient klassetrin' => NULL,
      'Klient forældremyndighed - ID' => NULL,
      'Klient forældremyndighed - Klient forældremyndighed' => NULL,
      'Klient note' => NULL,
    ),
  );
}

/**
 * Service function for creating a document.
 *
 * @param array $data
 *   Structured array with data for the Case.
 *
 * @return boolean
 *   TRUE on successful content creation.
 */
function os2web_cs_service_create_document(array $data) {
  $data = array_replace_recursive(os2web_cs_service_default_document(), $data);
  // Prepare data.
  $query = new EntityFieldQuery();
  $result = $query
      ->entityCondition('entity_type', 'node')
      ->propertyCondition('type', 'os2web_cp_service_cp_document')
      ->propertyCondition('status', 1)
      ->fieldCondition('field_os2web_cp_service_sysid', 'value', $data['fields']['SystemID'], '=')
      ->execute();
  $node = new stdClass();
  $nids = (isset($result['node']))?array_keys($result['node']):array();
  if (count($nids) > 1) {
    if (is_array($nids)) {
      node_delete_multiple($nids);
    }
  }
  else {
    $node = node_load(array_pop($nids));
  }
  $node->type = 'os2web_cp_service_cp_document';
  $node->uid = 0;
  $node->status = 1;
  $node->comment = 0;
  $node->promote = 0;
  $node->moderate = 0;
  $node->sticky = 0;
  $node->language = LANGUAGE_NONE;
  node_object_prepare($node);

  $node->title = (string) !empty($data['fields']['Officiel Titel'])?$data['fields']['Officiel Titel']:$data['fields']['Dokumenttitel'];
  $node_fields = field_info_instances('node','os2web_cp_service_cp_document'); // Has all fields of a node type case
  foreach ($node_fields as $field_name => $field) {
    if(!empty($data['fields'][$field['label']])){

      $field_info = field_info_field($field_name);

      switch ($field_info['type']) {
        case 'text':
          $node->{$field_name}[LANGUAGE_NONE][0]['value'] = (string) $data['fields'][$field['label']];
          break;
        default:
          $node->{$field_name}[LANGUAGE_NONE][0]['value'] = $data['fields'][$field['label']];
          break;
      }
    }
  }
  try {
    node_submit($node);
    node_save($node);
  } catch (Exception $e) {
    error_log('Error on save: '. print_r($e->getMessage(), 1));
    return false;
  }

  // Update case
  $query = new EntityFieldQuery();
  $result = $query
      ->entityCondition('entity_type', 'node')
      ->propertyCondition('type', 'os2web_cp_service_cp_case')
      ->propertyCondition('status', 1)
      ->fieldCondition('field_os2web_cp_service_sysid', 'value', $data['fields']['Sag SystemID'], '=')
      ->execute();
  $nids = array_keys($result['node']);
  foreach ($nids as $nid) {
    $cnode = node_load($nid);
    $node->field_os2web_cp_service_case_id[LANGUAGE_NONE][]['value'] = $cnode->field_os2web_cp_service_case_id[LANGUAGE_NONE][0]['value'];
    node_save($node);
    $is_missing = TRUE;
    foreach ($cnode->field_os2web_cp_service_doc_ref[LANGUAGE_NONE] as $value) {
      if ($value['target_id'] == $node->nid) {
        $is_missing = FALSE;
      }
    }
    if ($is_missing) {
      $cnode->field_os2web_cp_service_doc_ref[LANGUAGE_NONE][]['target_id'] = $node->nid;
      node_save($cnode);
    }
  }
  return TRUE;
}

/**
 * Default array structure for a case.
 */
function os2web_cs_service_default_document() {
  return array(
    'type' => 'document',
    'rules' => array(),
    'status' => NULL,
    'fields' => array(
      'Opfølgning påkrævet' => NULL,
      'Journaldato' => NULL,
      'Dokumentdato' => NULL,
      'Oprettelsesdato' => NULL,
      'Redigeringsdato' => NULL,
      'Dokumentfrist' => NULL,
      'FilRedigeringsdato' => NULL,
      'SystemID' => NULL,
      'Sag SystemID' => NULL,
      'Dokumentnummer' => NULL,
      'Dokumentløbenummer' => NULL,
      'Journalår' => NULL,
      'Lagringsform - ID' => NULL,
      'Sagsbehandler - BrugerID' => NULL,
      'Aktindsigt - AktindsigtsID' => NULL,
      'Adgangsgruppe - AdgangsgruppeID' => NULL,
      'FilID' => NULL,
      'Filversion' => NULL,
      'SagsID' => NULL,
      'Indhold_FileID' => NULL,
      'Journalnummer' => NULL,
      'Dokumenttitel' => NULL,
      'Officiel titel' => NULL,
      'Indholdsbeskrivelse' => NULL,
      'Lagringsform - Lagringsform' => NULL,
      'Dokumenttype - Dokumenttype' => NULL,
      'Dokumenttype - Dokumenttypebetegnelse' => NULL,
      'Kategori - Kategori' => NULL,
      'Kategori - Kategoribetegnelse' => NULL,
      'Sagsbehandler - Bruger logon' => NULL,
      'Sagsbehandler - Brugernavn' => NULL,
      'Aktindsigt - Aktindsigt' => NULL,
      'Adgangskode - Adgangskode' => NULL,
      'Adgangskode - Adgangskodebetegnelse' => NULL,
      'Adgangsgruppe - Adgangsgruppe' => NULL,
      'Journalstatus - Journalstatus' => NULL,
      'Journalstatus - Journalstatusbetegnelse' => NULL,
      'Dokumentstatus - Dokumentstatus' => NULL,
      'Dokumentstatus - Dokumentstatusbetegnelse' => NULL,
      'Dokumentfrist note' => NULL,
      'Arkivdel - Arkivdel' => NULL,
      'Arkivdel - Arkivdelbetegnelse' => NULL,
      'Filformat' => NULL,
      'Låst' => NULL,
    ),
  );
}

function os2web_cp_service_node_delete($node) {
  if ($node->type == 'os2web_cp_service_cp_document') {
    // Prepare data.
    $query = new EntityFieldQuery();
    $result = $query
        ->entityCondition('entity_type', 'node')
        ->propertyCondition('type', 'os2web_cp_service_cp_case')
        ->propertyCondition('status', 1)
        ->fieldCondition('field_os2web_cp_service_doc_ref', 'target_id', $node->nid, '=')
        ->execute();
    $nids = array_keys($result['node']);
    $new_nids = array();
    foreach ($nids as $nid) {
      $cnode = node_load($nid);
      foreach ($cnode->field_os2web_cp_service_doc_ref[LANGUAGE_NONE] as $value) {
        if ($value['target_id'] != $node->nid) {
          $new_nids[] = $value;
        }
      }
      $cnode->field_os2web_cp_service_doc_ref[LANGUAGE_NONE] = $new_nids;
      node_save($cnode);
    }
  }
}

/**
 * Implements hook_field_formatter_info().
 */
function os2web_cp_service_field_formatter_info() {
  return array(
    'os2web_cp_service_file_formatter' => array(
      'label' => t('OS2Web Filelink'),
      'field types' => array('text'),
      'settings' => array(
        // Base url up which we'll insert the file id
        'base_url' => 'os2web/service/gf/v1/!id',
      ),
    ),
  );
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function os2web_cp_service_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $display = $instance['display'][$view_mode];
  $element = array();
  $element['base_url'] = array(
    '#type' => 'textfield',
    '#title' => t('Base URL'),
    '#description' => t('Base URL where to request the file. !id will be substituded for the actual ID.'),
    '#default_value' => $display['settings']['base_url'],
  );
  return $element;
}

/**
 * Implements hook_field_formatter_settings_summary().
 */
function os2web_cp_service_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];
  $summary = t('Make a link to a file with a base url of @url', array(
    '@url' => $settings['base_url'],
      ));
  return $summary;
}

/**
 * Implements hook_field_formatter_view().
 */
function os2web_cp_service_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  if ($display['type'] != 'os2web_cp_service_file_formatter') {
    return;
  }
  $base_url = $display['settings']['base_url'];
  $element = array();
  foreach ($items as $delta => $item) {
    error_log(basename(__FILE__) . ':' . __LINE__ . ' Var: $item = ' . print_r($item, 1));
    $fileID = $item['value'];
    $url = format_string($base_url, array('!id' => $fileID));
    $element[$delta]['#markup'] = l(t('Download'), $url);
  }
  return $element;
}
/**
 * Implements hook_foorm_alter()
 */
function os2web_cp_service_form_alter( &$form, &$form_state, $form_id )
{
  if ($form['#id'] == 'views-exposed-form-os2web-cp-service-cp-case-search-page' ||
      $form['#id'] == 'views-exposed-form-os2web-cp-service-cp-case-search-panel-pane-1' ||
      $form['#id'] == 'views-exposed-form-os2web-cp-service-cp-case-search-default') {
    // Adds placeholder to all textfields with a description - ab@bellcom.dk
    foreach ($form['#info'] as $id => &$widget) {
      if (!empty($widget['description']) && isset($form[$widget['value']]['#type']) && $form[$widget['value']]['#type'] === 'textfield') {
        $form[$widget['value']]['#attributes']['placeholder'] = $widget['description'];
      }
    }
  }
}

/**
 * Implements theme_preprocess_views_exposed_form()
 * Wrap certain elements in search form. Used for styling etc.
 */
function os2web_cp_service_preprocess_views_exposed_form(&$variables) {
  if ($variables['form']['#id'] == 'views-exposed-form-os2web-cp-service-cp-case-search-page' ||
      $variables['form']['#id'] == 'views-exposed-form-os2web-cp-service-cp-case-search-panel-pane-1' ||
      $variables['form']['#id'] == 'views-exposed-form-os2web-cp-service-cp-case-search-default') {
    foreach ($variables['widgets'] as $id => &$widget) {
      switch ($id) {
        case 'filter-field_os2web_cp_service_date_value_1':
          $widget->prefix = '<div class="filter-widgets-wrapper clearfix">';
          break;
        case 'filter-field_os2web_cp_service_date_value_2':
          $widget->suffix = '<input type="submit" name="" value="Søg" class="form-submit"></div>';
          break;
        case 'filter-field_os2web_cp_service_case_id_value':
          $widget->prefix = '<div class="filter-widgets-wrapper clearfix">';
          $widget->suffix = '<input type="submit" name="" value="Find sag" class="form-submit"></div>';
          break;
        case 'filter-field_os2web_cp_service_doc_id_value':
          $widget->prefix = '<div class="filter-widgets-wrapper clearfix">';
          $widget->suffix = '<input type="submit" name="" value="Find dokument" class="form-submit"></div>';
          break;
      }
    }

    $calIcon = drupal_get_path('theme', variable_get('theme_default', NULL)) . "/images/cal.png";
    $datepicker = 'jQuery(document).ready(function($) {
      $( "#edit-field-os2web-cp-service-date-from-value-datepicker-popup-0" ).datepicker({
                    showOn: "both",
                    buttonImage: "' . $calIcon . '",
                    buttonImageOnly: true,
                    dateFormat: "dd-mm-yy"
      });
      $( "#edit-field-os2web-cp-service-date-to-value-datepicker-popup-0" ).datepicker({
                    showOn: "both",
                    buttonImage: "' . $calIcon . '",
                    buttonImageOnly: true,
                    dateFormat: "dd-mm-yy"
      });
    });';
    drupal_add_js($datepicker, array('type' => 'inline', 'scope' => 'footer', 'weight' => 5));
  }
}

/**
 * Implements hook_theme_registry_alter()
 * Add the tpl for exposed form to the theme registry
 * Somehow this gets overridden by cmstheme.
 */
function os2web_cp_service_theme_registry_alter(&$theme_registry) {
  if (!empty($theme_registry['views_exposed_form__os2web_cp_service_cp_case_search']['path'])) {
    $theme_registry['views_exposed_form__os2web_cp_service_cp_case_search']['path'] = drupal_get_path('module', 'os2web_cp_service'). '/theme/';
  }
}


/**
 * Implements hook_form_alter().
 *
 * Add configuration to the settings form.
 */
function os2web_cp_service_form_os2web_settings_settings_form_alter(&$form, &$form_state) {
  // CM Configuration.
  $form['os2web_cp_service_config_group'] = array(
    '#type' => 'fieldset',
    '#title' => t('CP File Endpoint configuration'),
  );
  $form['os2web_cp_service_config_group']['os2web_cp_service_endpoint_user'] = array(
    '#type' => 'textfield',
    '#default_value' => variable_get('os2web_cp_service_endpoint_user'),
    '#title' => t('CP File endpoint user'),
    '#description' => t('CP File endpoint HTTP authentification user.'),
  );
  $form['os2web_cp_service_config_group']['os2web_cp_service_endpoint_password'] = array(
    '#type' => 'textfield',
    '#default_value' => variable_get('os2web_cp_service_endpoint_password'),
    '#title' => t('CP File endpoint password'),
    '#description' => t('CP File endpoint HTTP authentification password.'),
  );
}
